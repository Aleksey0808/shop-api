{"version":3,"file":"static/js/700.92bf0848.chunk.js","mappings":"mTAIaA,EAAUC,EAAAA,EAAAA,IAAH,mJAQPC,EAAcD,EAAAA,EAAAA,IAAH,0FAMXE,EAAOF,EAAAA,EAAAA,GAAH,+MAYJG,EAAOH,EAAAA,EAAAA,GAAH,gRAcJI,GAAQJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,yNA6CLM,IAlCQN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,wIAQUA,EAAAA,EAAAA,OAAH,wWAkBLA,EAAAA,EAAAA,GAAOQ,EAAAA,IAAPR,CAAH,kHAQIA,EAAAA,EAAAA,MAAH,+GAOLS,EAAOT,EAAAA,EAAAA,EAAH,0IAgBJU,GARQV,EAAAA,EAAAA,GAAH,0IAQMA,EAAAA,EAAAA,IAAH,4DAKRW,EAASX,EAAAA,EAAAA,OAAH,qLAUNY,EAAQZ,EAAAA,EAAAA,EAAH,gHAQLa,EAAcb,EAAAA,EAAAA,EAAH,yIAQXc,EAAiBd,EAAAA,EAAAA,OAAH,qLAUde,EAASf,EAAAA,EAAAA,OAAH,qLAUNgB,EAAQhB,EAAAA,EAAAA,IAAH,6C,SCzIZiB,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,WACnBC,OAAQJ,EAAAA,KAAaK,WAAWF,WAChCG,MAAON,EAAAA,KAAaG,aAGhBI,EAAW,WACf,OAAwCC,EAAAA,EAAAA,WACtC,kBAAMC,KAAKC,MAAMC,aAAaC,QAVR,SAUuC,EAA7D,IADF,eAAOC,EAAP,KAAqBC,EAArB,KAGA,GAAwBN,EAAAA,EAAAA,UAAS,IAAjC,eAAOO,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACRN,aAAaO,QAfS,MAekBT,KAAKU,UAAUN,GACxD,GAAE,CAACA,IA4CJ,OACE,UAAChC,EAAD,YACE,SAAC,KAAD,KACA,4BAEI,SAAC,KAAD,CACEuC,cAZY,CACpBlB,KAAM,GACNE,OAAQ,GACRE,MAAO,IAUCe,SA7BW,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UACxBD,GAIHN,EAAQ,CAAC,CAAEQ,KAAMF,EAAOG,KAAMZ,KAC9Ba,QAAQC,IAAIZ,GAEZQ,MANAG,QAAQC,IAAI,SACZC,EAAAA,GAAAA,MAAY,mBAAoB,CAAEC,UAAW,OAOhD,EAoBSC,iBAAkB/B,EAHpB,UAKE,UAACb,EAAD,YACE,UAACE,EAAD,CAAO2C,QAAQ,OAAf,WACE,SAACxC,EAAD,oBACA,SAAC,KAAD,CACEyC,KAAK,OACL9B,KAAK,OACL+B,QAAQ,yHACRC,MAAM,yIACN/B,UAAQ,KAEV,SAAC,KAAD,CAAcD,KAAK,OAAOiC,UAAU,YAGtC,UAAC/C,EAAD,CAAO2C,QAAQ,SAAf,WACE,SAACxC,EAAD,qBACA,SAAC,KAAD,CACEyC,KAAK,MACL9B,KAAK,SACL+B,QAAQ,yFACRC,MAAM,+FACN/B,UAAQ,KAEV,SAAC,KAAD,CAAcD,KAAK,SAASiC,UAAU,YAGxC,UAAC/C,EAAD,CAAO2C,QAAQ,SAAf,WACE,SAACxC,EAAD,qBACA,SAAC,KAAD,CACEyC,KAAK,QACL9B,KAAK,QACL+B,QAAQ,+IACRC,MAAM,wFACN/B,UAAQ,KAEV,SAAC,KAAD,CAAcD,KAAK,QAAQiC,UAAU,YAGvC,SAACtC,EAAD,CAAQmC,KAAK,SAAb,4BAKJ,SAAClC,EAAD,WACE,UAACP,EAAD,0BA9DDsB,EAAauB,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAKC,MAAQD,EAAKE,KAAvC,GAA8C,YAkEvE,SAACzD,EAAD,WACE,SAACC,EAAD,UACG6B,EAAa4B,OAAS,EACnB5B,EAAa6B,KAAI,SAAAJ,GACf,OACE,UAACrD,EAAD,CAAMiD,MAAOI,EAAKK,KAAlB,WACE,SAAChD,EAAD,UAAc2C,EAAKK,QACnB,UAACpD,EAAD,oBAAa+C,EAAKC,UAClB,UAAC/C,EAAD,YACG,SAACC,EAAD,CAAQmD,QAAS,kBA/Ff,SAAAC,GACrB,GAAIA,EAAQL,MAAQ,EAAG,CACrB,IAAMM,EAAWD,EAAQL,MAAQ,EACjC1B,GAAgB,OAAID,GAAgBgC,EAAQL,MAAQM,EACrD,CACF,CA0F2CC,CAAeT,EAArB,EAAjB,gBACD,SAAC5C,EAAD,UAAQ4C,EAAKE,SACZ,SAAC/C,EAAD,CAAQmD,QAAS,kBAvGf,SAAAC,GACrB,IAAMC,EAAWD,EAAQL,MAAQ,EAEjC1B,GAAgB,OAAID,GAAgBgC,EAAQL,MAAQM,EACrD,CAmG2CE,CAAeV,EAArB,EAAjB,mBAGD,SAAC1C,EAAD,CACEgD,QAAS,kBAlHF,SAAAK,GAC3B,IAAMC,EAAkBrC,EAAasC,QACnC,SAAAb,GAAI,OAAIA,EAAKc,KAAOH,EAAUG,EAA1B,IAENtC,EAAgBoC,EACjB,CA6GoCG,CAAqBf,EAA3B,EACTN,KAAK,UAFP,sBATyBM,EAAKc,GAkBrC,IACD,0BAKb,EAED7C,EAAS+C,UAAY,CACnBjC,SAAUkC,IAAAA,KAAAA,YAGZ,I,EAAA,IC9KaC,EAAiB1E,EAAAA,EAAAA,KAAH,8CCS3B,EARa,SAAC,GAAc,IAAZ2C,EAAW,EAAXA,KACd,OACE,SAAC+B,EAAD,WACE,SAAC,EAAD,CAAY/B,KAAMA,KAGvB,C","sources":["components/CartForm/CartForm.styled.js","components/CartForm/CartForm.jsx","pages/Shop/Shop.styled.jsx","pages/Shop/Shop.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { HiSearch } from 'react-icons/hi';\nimport { Form, Field } from 'formik';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const WrapperCart = styled.div`\n  border: 10px solid #ece89d;\n  display: flex;\n  width: 800px;\n`;\n\nexport const List = styled.ul`\n  /* padding: 20px 0 20px;\n  margin: 0; */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  row-gap: 10px;\n  list-style-type: square;\n\n  flex-wrap: wrap;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding-top: 20px;\n  padding-right: 5px;\n  padding-left: 5px;\n  padding-bottom: 20px;\n  row-gap: 5px;\n  padding-bottom: 20px;\n  width: 220px;\n`;\n\nexport const Forma = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  width: 400px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Input = styled(Field)`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  outline: none;\n  font: inherit;\n  /* width: 800px; */\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 38px;\n  height: 38px;\n  border: 0;\n  background: none;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const Icon = styled(HiSearch)`\n  width: 25px;\n  height: 25px;\n  /* position: absolute; */\n  right: 7px;\n  top: 9px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  width: 250px;\n`;\n\nexport const Text = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 12px;\n  letter-spacing: 0.03em;\n  margin-bottom: 10px;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  font-size: 26px;\n  line-height: 18px;\n  letter-spacing: 0.02em;\n  margin-bottom: 10px;\n`;\n\nexport const Quantity = styled.div`\n  display: flex;\n  row-gap: 5px;\n`;\n\nexport const Button = styled.button`\n  width: 40px;\n  border: 1px solid black;\n  border-radius: 60px;\n  color: #000000;\n  background-color: #e0d6ba;\n  cursor: pointer;\n  font-size: 15px;\n`;\n\nexport const Count = styled.p`\n  padding: 5px;\n\n  font-size: 18px;\n  line-height: 14px;\n  letter-spacing: 0.02em;\n`;\n\nexport const NameProduct = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 6px;\n  letter-spacing: 0.01em;\n  margin-bottom: 10px;\n`;\n\nexport const RemoveFromCart = styled.button`\n  width: 110px;\n  border: 1px solid black;\n  border-radius: 5px;\n  color: #000000;\n  background-color: #e0d6ba;\n  cursor: pointer;\n  font-size: 15px;\n`;\n\nexport const Submit = styled.button`\n  width: 200px;\n  border: 1px solid black;\n  border-radius: 5px;\n  color: #000000;\n  background-color: #e0d6ba;\n  cursor: pointer;\n  font-size: 15px;\n`;\n\nexport const Price = styled.div`\n  margin-top: 15px;\n`;\n","import { Formik, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {\n  Wrapper,\n  Forma,\n  Label,\n  Text,\n  List,\n  Item,\n  Quantity,\n  Button,\n  Count,\n  NameProduct,\n  RemoveFromCart,\n  WrapperCart,\n  Submit,\n  Price,\n} from './CartForm.styled';\n\nconst LOCAL_STORAGE_ADD = 'add';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().positive().required(),\n  email: yup.string().required(),\n});\n\nconst CartForm = () => {\n  const [cartProducts, setCartProducts] = useState(\n    () => JSON.parse(localStorage.getItem(LOCAL_STORAGE_ADD)) || []\n  );\n  const [form, setForm] = useState([]);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_ADD, JSON.stringify(cartProducts));\n  }, [cartProducts]);\n\n  const handleRemoveFromCart = productID => {\n    const newCartProducts = cartProducts.filter(\n      item => item.id !== productID.id\n    );\n    setCartProducts(newCartProducts);\n  };\n\n  const countIncrement = product => {\n    const newCount = product.count + 1;\n\n    setCartProducts([...cartProducts], (product.count = newCount));\n  };\n\n  const countDecrement = product => {\n    if (product.count > 1) {\n      const newCount = product.count - 1;\n      setCartProducts([...cartProducts], (product.count = newCount));\n    }\n  };\n\n  const handleSubmit = (query, { resetForm }) => {\n    if (!query) {\n      console.log('error');\n      toast.error('Enter a request!', { autoClose: 1500 });\n    } else {\n      setForm([{ user: query, cart: cartProducts }]);\n      console.log(form);\n\n      resetForm();\n    }\n  };\n\n  const totalPrice = () => {\n    return cartProducts.reduce((acc, item) => acc + item.price * item.count, 0);\n  };\n\n  const initialValues = {\n    name: '',\n    number: '',\n    email: '',\n  };\n\n  return (\n    <Wrapper>\n      <ToastContainer />\n      <div>\n        {\n          <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            validationSchema={schema}\n          >\n            <Forma>\n              <Label htmlFor=\"name\">\n                <Text>Name</Text>\n                <Field\n                  type=\"text\"\n                  name=\"name\"\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                  required\n                />\n                <ErrorMessage name=\"name\" component=\"div\" />\n              </Label>\n\n              <Label htmlFor=\"number\">\n                <Text>Phone</Text>\n                <Field\n                  type=\"tel\"\n                  name=\"number\"\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  required\n                />\n                <ErrorMessage name=\"number\" component=\"div\" />\n              </Label>\n\n              <Label htmlFor=\"number\">\n                <Text>Email</Text>\n                <Field\n                  type=\"email\"\n                  name=\"email\"\n                  pattern=\"[-a-zA-Z0-9~!$%^&amp;*_=+}{'?]+(\\.[-a-zA-Z0-9~!$%^&amp;*_=+}{'?]+)*@([a-zA-Z0-9_][-a-zA-Z0-9_]*(\\.[-a-zA-Z0-9_]+)*\\.([cC][oO][mM]))(:[0-9]{1,5})?\"\n                  title=\"email must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  required\n                />\n                <ErrorMessage name=\"email\" component=\"div\" />\n              </Label>\n\n              <Submit type=\"submit\">Checkout</Submit>\n            </Forma>\n          </Formik>\n        }\n        {\n          <Price>\n            <Text>total price:{totalPrice()}</Text>\n          </Price>\n        }\n      </div>\n      <WrapperCart>\n        <List>\n          {cartProducts.length > 0\n            ? cartProducts.map(item => {\n                return (\n                  <Item title={item.dish} key={item.id}>\n                    <NameProduct>{item.dish}</NameProduct>\n                    <Text>price:{item.price}</Text>\n                    <Quantity>\n                      {<Button onClick={() => countDecrement(item)}>-</Button>}\n                      <Count>{item.count}</Count>\n                      {<Button onClick={() => countIncrement(item)}>+</Button>}\n                    </Quantity>\n                    {\n                      <RemoveFromCart\n                        onClick={() => handleRemoveFromCart(item)}\n                        type=\"primary\"\n                      >\n                        delete\n                      </RemoveFromCart>\n                    }\n                  </Item>\n                );\n              })\n            : 'cart is empty! :('}\n        </List>\n      </WrapperCart>\n    </Wrapper>\n  );\n};\n\nCartForm.prototype = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default CartForm;\n","import styled from '@emotion/styled';\n\nexport const MovieContainer = styled.main`\n  margin: 10px 30px;\n`;\n","import SearchForm from 'components/CartForm/CartForm';\nimport { MovieContainer } from './Shop.styled';\n\nconst Shop = ({ cart }) => {\n  return (\n    <MovieContainer>\n      <SearchForm cart={cart} />\n    </MovieContainer>\n  );\n};\n\nexport default Shop;\n"],"names":["Wrapper","styled","WrapperCart","List","Item","Forma","Form","Label","Field","HiSearch","Text","Quantity","Button","Count","NameProduct","RemoveFromCart","Submit","Price","schema","yup","shape","name","required","number","positive","email","CartForm","useState","JSON","parse","localStorage","getItem","cartProducts","setCartProducts","form","setForm","useEffect","setItem","stringify","initialValues","onSubmit","query","resetForm","user","cart","console","log","toast","autoClose","validationSchema","htmlFor","type","pattern","title","component","reduce","acc","item","price","count","length","map","dish","onClick","product","newCount","countDecrement","countIncrement","productID","newCartProducts","filter","id","handleRemoveFromCart","prototype","PropTypes","MovieContainer"],"sourceRoot":""}